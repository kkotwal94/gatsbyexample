{"version":3,"file":"component---src-pages-index-js-922b461090f6ce41d8a5.js","mappings":"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","sources":["webpack://gatsby-markdown-api-example/./src/components/Header.js","webpack://gatsby-markdown-api-example/./src/components/Layout.js","webpack://gatsby-markdown-api-example/./src/components/SEO.js","webpack://gatsby-markdown-api-example/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.header`\n  background-color: #333;\n  padding: 1rem 0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst Nav = styled.nav`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 1.5rem;\n  font-weight: bold;\n  \n  &:hover {\n    color: #ccc;\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  gap: 2rem;\n`;\n\nconst NavLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 1rem;\n  \n  &:hover {\n    color: #ccc;\n  }\n  \n  &.active {\n    color: #007bff;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Nav>\n        <Logo to=\"/\">Gatsby Markdown Example</Logo>\n        <NavLinks>\n          <NavLink to=\"/\" activeClassName=\"active\">\n            Home\n          </NavLink>\n          <NavLink to=\"/about\" activeClassName=\"active\">\n            About\n          </NavLink>\n        </NavLinks>\n      </Nav>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './Header';\n\nconst LayoutWrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  padding: 2rem 0;\n`;\n\nconst Footer = styled.footer`\n  background-color: #333;\n  color: white;\n  text-align: center;\n  padding: 2rem;\n  margin-top: 4rem;\n`;\n\nconst Layout = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <Header />\n      <Main>{children}</Main>\n      <Footer>\n        <p>&copy; 2024 Gatsby Markdown API Example. All rights reserved.</p>\n      </Footer>\n    </LayoutWrapper>\n  );\n};\n\nexport default Layout;","import React from 'react';\n\nconst SEO = ({ title, description }) => {\n  const siteTitle = 'Gatsby Markdown API Example';\n  const fullTitle = title ? `${title} | ${siteTitle}` : siteTitle;\n  const defaultDescription = 'A Gatsby site that sources markdown files from an API with multiple templates';\n  \n  return (\n    <>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description || defaultDescription} />\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description || defaultDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description || defaultDescription} />\n    </>\n  );\n};\n\nexport default SEO;","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst HeroSection = styled.section`\n  text-align: center;\n  margin-bottom: 4rem;\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 3rem;\n  color: #333;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst HeroDescription = styled.p`\n  font-size: 1.25rem;\n  color: #666;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 2rem;\n  margin-top: 3rem;\n`;\n\nconst PostCard = styled(Link)`\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  text-decoration: none;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst PostImage = styled.div`\n  height: 200px;\n  background-image: url(${props => props.image || 'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?w=600&h=400&fit=crop'});\n  background-size: cover;\n  background-position: center;\n  background-color: #f0f0f0;\n  position: relative;\n`;\n\nconst PostContent = styled.div`\n  padding: 1.5rem;\n`;\n\nconst PostCategory = styled.span`\n  display: inline-block;\n  background: ${props => props.template === 'template2' ? '#007bff' : '#28a745'};\n  color: white;\n  padding: 0.25rem 0.75rem;\n  border-radius: 15px;\n  font-size: 0.75rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 1.5rem;\n  color: #333;\n  margin-bottom: 0.5rem;\n  line-height: 1.3;\n`;\n\nconst PostDescription = styled.p`\n  color: #666;\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-bottom: 1rem;\n`;\n\nconst PostMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.875rem;\n  color: #999;\n`;\n\nconst PostDate = styled.span``;\n\nconst PostAuthor = styled.span``;\n\nconst NoPostsMessage = styled.div`\n  text-align: center;\n  padding: 4rem 2rem;\n  color: #666;\n`;\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownPost.nodes;\n  \n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Container>\n        <HeroSection>\n          <HeroTitle>Welcome to Gatsby Markdown Example</HeroTitle>\n          <HeroDescription>\n            Explore our collection of articles showcasing different template styles\n            and content types, all sourced from our markdown API.\n          </HeroDescription>\n        </HeroSection>\n        \n        {posts.length > 0 ? (\n          <PostGrid>\n            {posts.map(post => (\n              <PostCard key={post.slug} to={`/posts/${post.slug}`}>\n                <PostImage image={post.image} />\n                <PostContent>\n                  <PostCategory template={post.template}>\n                    {post.category || (post.template === 'template2' ? 'Feature' : 'Article')}\n                  </PostCategory>\n                  <PostTitle>{post.title}</PostTitle>\n                  <PostDescription>{post.description}</PostDescription>\n                  <PostMeta>\n                    <PostDate>\n                      {post.date ? new Date(post.date).toLocaleDateString() : 'Recent'}\n                    </PostDate>\n                    <PostAuthor>{post.author || 'Team'}</PostAuthor>\n                  </PostMeta>\n                </PostContent>\n              </PostCard>\n            ))}\n          </PostGrid>\n        ) : (\n          <NoPostsMessage>\n            <h2>No posts available</h2>\n            <p>Make sure your API server is running on port 3001</p>\n          </NoPostsMessage>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownPost {\n      nodes {\n        slug\n        title\n        description\n        image\n        template\n        date\n        author\n        category\n      }\n    }\n  }\n`;\n\nexport default IndexPage;"],"names":["HeaderWrapper","styled","header","withConfig","displayName","componentId","Nav","nav","Logo","Link","NavLinks","div","NavLink","Header","React","to","activeClassName","LayoutWrapper","Main","main","Footer","footer","_ref","children","title","description","siteTitle","fullTitle","defaultDescription","name","content","property","Container","HeroSection","section","HeroTitle","h1","HeroDescription","p","PostGrid","PostCard","PostImage","props","image","PostContent","PostCategory","span","template","PostTitle","h2","PostDescription","PostMeta","PostDate","PostAuthor","NoPostsMessage","data","posts","allMarkdownPost","nodes","Layout","SEO","length","map","post","key","slug","category","date","Date","toLocaleDateString","author"],"sourceRoot":""}